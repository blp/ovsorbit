<?xml version="1.0" encoding="utf-8"?>
<item xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
  <title>Mininet</title>
  <guests>Bob Lantz and Brian O'Connor from ON.LAB</guests>
  <description>
    <p>
      Interview with Bob Lantz and Brian O'Connor of <a
      href="http://onlab.us/">ON.LAB</a>, about <a
      href="http://mininet.org/">Mininet</a> software for simulating networks.
    </p>

    <p>
      Bob previously gave a talk about Mininet (<a
      href="http://openvswitch.org/support/ovscon2015/16/1305-lantz.pdf">slides</a>,
      <a href="https://www.youtube.com/watch?v=UWImN9IDpZQ">video</a>) at the
      <a href="http://openvswitch.org/support/ovscon2015/">Open vSwitch 2015
      Fall Conference</a>.
    </p>

    <p>
      Bob describes the mission of ON.LAB and how he ended up there.  He talks
      about introducing the idea of a network operating system to ON.LAB.  He
      mentioned that his interest in networks arose from a lecture by Nick
      McKeown in the EE380 lecture series at Stanford, in which Nick stated:
      ``Networks are like hardware without an operating system,'' which piqued
      Bob's interest.
    </p>

    <p>
      Brian relates his own experience getting involved with SDN, Mininet, and
      ON.LAB.
    </p>

    <p>
      Bob describes the genesis of Mininet by analogy to mobile device
      development.  Mobile device development is a pain because no one wants to
      spend all their time with these tiny devices, so you use a simulator.
      For network development, you need a simulator too because otherwise you
      need a huge stack of expensive hardware.  Mininet was directly inspired
      by a network namespaces-based simulator developed in-house at Arista for
      testing EOS.
    </p>

    <p>
      Bob compares Mininet to Docker and other container systems.  All of these
      are container orchestration systems that make use of the ``namespace''
      and control group (cgroup) features of the Linux kernel.  Mininet gives
      more control over the network topology than the others.
    </p>

    <p>
      Bob talks about limitations in OpenStack networking and what he'd like to
      see OpenStack support in networking.
    </p>

    <p>
      Brian describes a trend in NFV toward minimization, that is, reducing the
      amount of overhead due to VMs, often by running in containers instead.
      He speculates that containers might later be considered too heavyweight.
      In Mininet, isolation is Ã  la carte: the aspects of network isolation,
      process isolation, and so on can all be configured independently, so that
      users do not experience overhead that is not needed for a particular
      application.
    </p>

    <p>
      Bob talks about the scale that Mininet can achieve and that users
      actually want to simulate in practice and contrasts it against the scale
      (and particular diameter) of real networks.  Versus putting each switch
      in a VM, Bob says that Mininet allows for up to two orders of magnitude
      scale improvement.  His original vision was to simulate the entire
      Stanford network of 25,000 nodes on a rack of machines.  Bob talks about
      distributed systems built on Mininet, which are not officially integrated
      into Mininet.  Distributed Mininet clusters are a work in progress.  In
      general, Mininet scales better than most controllers.
    </p>

    <p>
      Bob compares Mininet to <a href="https://www.nsnam.org/">ns3</a>.  ns3
      was originally a cycle-accurate simulator, but this made it hard to
      connect to real hardware and run in real time, so it has moved in a
      direction where it works in a mode similar to Mininet.
    </p>

    <p>
      Bob describes the Mininet development community, based on github pull
      requests.  Bob describes a paradox in which they'd like to accept
      contributions but most of the patches that they receive are not of
      adequate quality.
    </p>

    <p>
      Bob talks about performance in OVS related to Mininet, as a review of his
      previous talk, and especially related to how Mininet speaks to OVSDB.
      The scale of Mininet doesn't interact well with the design of the OVS
      command-line tool for configuring OVS, which doesn't expect thousands of
      ports or perform well when they are present.  Bob reports that creating
      <a href="https://lwn.net/Articles/232688/">Linux veth devices</a> is also
      slow.
    </p>

    <p>
      Bob describes how to generate traffic with Mininet: however you like!
      Since you can run any application with Mininet, you can generate traffic
      with any convenient software.
    </p>

    <p>
      Brian's wish list: improving the support for clustering Mininet and the
      ability to ``dilate time'' to make Mininet simulation more accurate to
      specific hardware, and the ability to model the control network.
    </p>

    <p>
      You can contact Brian via <a href="mailto:brian@onlab.us">email</a>.  Bob
      recommends emailing the Mininet mailing list to get in contact with him.
    </p>

    <p class="attribution">
      OVS Orbit is produced by <a href="mailto:blp@ovn.org">Ben Pfaff</a>.  The
      intro music in this episode is <a
      href="http://dig.ccmixter.org/files/AlexBeroza/43098">Drive</a>,
      featuring cdk and DarrylJ, copyright 2013 by Alex.  The bumper music is
      <a href="http://dig.ccmixter.org/files/speck/42100">Yeah Ant</a>
      featuring Wired Ant and Javolenus, copyright 2013 by Speck.  The outro
      music is <a href="http://dig.ccmixter.org/files/Kirkoid/43005">Space
      Bazooka</a> featuring Doxen Zsigmond, copyright 2013 by Kirkoid.  All
      content is licensed under a Creative Commons <a
      href="http://creativecommons.org/licenses/by/3.0/">Attribution 3.0
      Unported (CC BY 3.0)</a> license.
    </p>
  </description>
<pubDate>Sat, 18 Jun 2016 03:19:11 GMT</pubDate>
</item>
